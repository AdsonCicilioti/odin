// ------------------------------------------------------------- //
// Odin Grid System v1.0 |  Licence WTFPL - http://www.wtfpl.net //
// ------------------------------------------------------------- //

// Variables.
$columns: 12 !default;
$page-width: 1180px !default;
$column-width: $page-width / $columns !default;
$column-padding: 20px !default;
$grid-type: elastic !default; // Grid type: elastic ou static.

// Add support to IE7.
$iesupport: false !default;
// Fuck, magic, mystic and sexy number for IE7 fix xD
$correction: 0.022;

// Sets the container and clean the float.
@mixin container( $type: $grid-type ) {
    @include clearfix();
    @if elastic == $grid-type {
        max-width: $page-width;
    } @else {
        width: $page-width;
    }
    position: relative;
    margin: 0 auto;
}

// Generates the columns of the grid.
@mixin span-column( $column: $columns, $padding: $column-padding, $type: $grid-type, $max-width: $page-width ) {
    @if elastic == $grid-type {
        width: percentage( ( ( $column-width * $column ) - $padding ) / $max-width );
        margin-right: percentage( ( $column-padding / 2 ) / $page-width );
        margin-left: percentage( ( $column-padding / 2 ) / $page-width );

        @if $iesupport {
            *width: percentage( ( ( $column-width * $column ) - $padding ) / $max-width )  - $correction;
            *margin-right: percentage( ( $column-padding / 2 ) / $page-width ) - $correction;
            *margin-left: percentage( ( $column-padding / 2 ) / $page-width ) - $correction;
        }
    } @else {
        width: ( $column-width * $column ) - $padding;
        margin-right: ( $padding / 2 );
        margin-left: ( $padding / 2 );
    }
    float: left;
}

// Push the column.
@mixin push( $offset: 1, $type: $grid-type, $width: $page-width ) {
    @if elastic == $grid-type {
        left: percentage( ( $column-width * $offset ) / $width );

        @if $iesupport {
            *left: percentage( ( $column-width * $offset ) / $width ) - $correction;
        }
    } @else {
        left: $column-width * $offset;
    }
    position: relative;
}

// Pull the column.
@mixin pull( $offset: 1, $type: $grid-type, $width: $page-width ) {
    @if elastic == $grid-type {
        left: - percentage( ( $column-width * $offset ) / $width );

        @if $iesupport {
            *left: - percentage( ( $column-width * $offset ) / $width ) + $correction;
        }
    } @else {
        left: - $column-width * $offset;
    }
    position: relative;
}

// Breakpoint.
@mixin breakpoint( $max-width ) {
    @media screen and ( max-width: $max-width ) {
        @content;
    }
}

// Board classes to reset the grid when it is responsive.
@mixin join_classes( $class, $total: $columns ) {
    $classes: ();
    @for $i from 1 through $total {
        $classes: join( $classes, unquote( "#{$class}#{$i} " ), comma );
    }
    #{$classes} {
        @content;
    }
}
